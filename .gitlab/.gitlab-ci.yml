# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

cache:
  paths:
    - .m2/repository

default:
  tags:
    - centos

stages: # List of stages for jobs, and their order of execution
  - deploy
  - notify

before_script:
  - mkdir -p ~/.m2
  - cp -n $CI_PROJECT_DIR/.mvn/settings.xml ~/.m2

deploy_job: # This job runs in the build stage, which runs first.
  stage: deploy
  only:
    - schedules
    - web
  script:
    - echo "Start deploy lodsve-boot to lodsve nexus repository..."
    # - mvn clean deploy -P release-lodsve
  after_script:
    - echo "Deployment successful!"

send_notification:
  stage: notify
  only:
    - schedules
    - web
  script:
    - |
      RESULT="Job failed"
      if [ "$CI_JOB_STATUS" == "success" ]; then
        RESULT="Job succeeded"
      fi

      curl -H "Content-Type: application/json" -X POST \
        -d '{"msgtype": "text", "text": {"content": "Lodsve GitLab CI/CD pipeline completed ${RESULT}"}}' \
        https://oapi.dingtalk.com/robot/send?access_token=$DING_TOKEN
  when: always
  needs:
    - job: deploy_job
      artifacts: false
